#!/bin/sh
# postinst script for graalvm-ce-java11
#
# see: dh_installdeb(1)

set -e

multiarch=x86_64-linux-gnu
priority=1089
basedir=/usr/lib/jvm/${GRAALVM_PACKAGE_NAME}
mandir=$basedir/man
srcext=1.gz
dstext=1.gz
jdk_tools='jconsole'

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
    # update-alternative case 1: no additional parameter is given.
    if [ -z "$2" ]; then
        update_alternatives=y
    fi

    # update-alternative case 2: multiarch & additional parameter is given but no alternative configured for binaries.
    if [ -n "$multiarch" ] && [ -n "$2" ]; then
        for bin in $basedir/bin/*; do
            i=$(basename $bin)
            if [ -z "$(update-alternatives --list $i 2>/dev/null | grep ^$basedir/)" ]; then
                update_alternatives=y
                break
            fi
        done
    fi

    # update-alternative case 3: java tools (jar, java, javac, javadoc, javap) are is already installed but priority is less or equal to than 1060
    if [ "$update_alternatives" != y ] && [ $priority -gt 1060 ]; then
        for bin in "jar java javac javadoc javap"; do
            oldp=$(update-alternatives --query java | awk -v b=$basedir '/^Alternative:/ && $2~b {p=1} /^Priority:/ && p {print $2; exit}')
            if [ -n "$oldp" ] && [ "$oldp" -le 1060 ]; then
                update_alternatives=y
                break
            fi
        done
    fi

    if [ "$update_alternatives" = y ]; then
        for bin in $basedir/bin/*; do
            i=$(basename $bin)
            update-alternatives --install /usr/bin/$i $i $bin $priority $slave1 $slave2
        done
        
        update-alternatives --install /usr/bin/python python /usr/bin/python3 1000 $slave1 $slave2
        update-alternatives --install /usr/bin/python python $basedir/bin/graal-python $priority $slave1 $slave2
        update-alternatives --install /usr/bin/node node $basedir/bin/graal-node $priority $slave1 $slave2
        update-alternatives --install /usr/bin/npm npm $basedir/bin/graal-npm $priority $slave1 $slave2
        update-alternatives --install /usr/bin/npx npx $basedir/bin/graal-npx $priority $slave1 $slave2
        update-alternatives --install /usr/bin/R R $basedir/bin/graal-R $priority $slave1 $slave2
        update-alternatives --install /usr/bin/wasm wasm $basedir/bin/graal-wasm $priority $slave1 $slave2

        for i in $jdk_tools; do
        unset slave1 slave2 || true
            if [ -e $mandir/man1/$i.$srcext ]; then
            slave1="--slave \
	        /usr/share/man/man1/$i.$dstext \
                    $i.$dstext \
                    $mandir/man1/$i.$srcext"
	    fi
            if false && [ -e $mandir/ja/man1/$i.$srcext ]; then
	        slave2="--slave \
	        /usr/share/man/ja/man1/$i.$dstext \
                    ${i}_ja.$dstext \
                    $mandir/ja/man1/$i.$srcext"
	    fi
        done
    fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
